bdg_dsct
old
prc
name


<div class="df -i-ctr -fw-w -pts"><span class="-b -ubpt -tal -fs24 -prxs">KSh 9,799</span><div class="-dif -i-ctr"><span class="-tal -gy5 -lthr -fs16 -pvxs -ubpt">KSh 15,995</span><span data-disc="39%" class="bdg _dsct _dyn -mls">39%</span></div></div>
<span class="-tal -gy5 -lthr -fs16 -pvxs -ubpt">KSh 39,999</span>
<span class="-tal -gy5 -lthr -fs16 -pvxs -ubpt">KSh 15,995</span>

<div class="-hr -mtxs -pvs"><div class="-bg-fsale -wt -pvxs -phs -rad4-top -df -rad4-bot"><div class="-df -j-bet -i-ctr -fw"><div class="-df -i-ctr"><svg viewBox="0 0 24 24" class="ic -fsh0" width="24" height="24"><use xlink:href="https://www.jumia.co.ke/assets_he/images/i-global.2771d4ef.svg#flash-sales"></use></svg><span class="-m -phxs">Flash Sales</span></div><div class="-f1 -tar">Starts on: <span class="-m -ws-p">22 Dec, 10:00am</span></div></div></div><div class="df -i-ctr -fw-w -pts"><span class="-b -ubpt -tal -fs24 -prxs">KSh 9,799</span><div class="-dif -i-ctr"><span class="-tal -gy5 -lthr -fs16 -pvxs -ubpt">KSh 15,995</span><span data-disc="39%" class="bdg _dsct _dyn -mls">39%</span></div></div></div>

<div class="stars _m _al">3.9 out of 5<div class="in" style="width:78%"></div></div>
<a class="-plxs _more" href="/catalog/productratingsreviews/sku/VI799EA1QMSQ4NAFAMZ/">(798 verified ratings)</a>



Step 2: Access pgAdmin Locally
Since you already have pgAdmin installed locally (on your host machine), follow these steps to connect it to the running PostgreSQL Docker container.

Open pgAdmin: Launch pgAdmin from your local machine.

Create a New Server:

Right-click on Servers in the left sidebar.
Select Create > Server.
Fill in the Connection Details: In the Create - Server window, fill in the following information:

General Tab:

Name: Choose any name for the server, e.g., Postgres Docker.
Connection Tab:

Host name/address: Use localhost or 127.0.0.1 (because you're running the PostgreSQL container on your local machine).
Port: 5432 (default PostgreSQL port, which you exposed in the docker run command).
Maintenance database: postgres (default PostgreSQL database).
Username: postgres (the default superuser for PostgreSQL).
Password: yourpassword (the password you specified with the POSTGRES_PASSWORD environment variable in the Docker container).



considering tvs.html html structure for url https://www.jumia.co.ke/televisions/#catalog-listing
generate a scraping script that extracts name, item_id, price, old_price, discount, brand, category, subcategory, source(where source is scrapping page e.g Jumia in this case), url, has_express_shipping, is_official_store
and saves all products in a csv as data/scraped/jumia_tvs.csv

i would also like to add a def scrape_jumia_cookers that scrapes cookers data from url https://www.jumia.co.ke/home-cooking-appliances-cookers/#catalog-listing following the format used with tvs by updating in scrape_jumia_tvs.py

is it possible to  create tableau viz using py script